{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          console.log(res);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      alert(\"This product has been added to cart\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"mKBMlcSzOL4zdnCHHgDRPiGLqqY=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/Shri/Desktop/Ecommerce-Artisians/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","console","log","err","alert","response","msg","addCart","product","check","every","item","_id","quantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAMC,OAAN,IAAeV,QAAQ,CAAC,EAAD,CAA7B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAJ,EAAW;AACP,YAAMO,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AAD8B,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;AACH,SAPD,CAOE,OAAOQ,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACH;AACJ,OAXD;;AAYAZ,MAAAA,OAAO;AACV;AACJ,GAhBQ,EAgBN,CAACP,KAAD,CAhBM,CAAT;;AAkBA,QAAMoB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAG,CAACpB,QAAJ,EAAc,OAAOgB,KAAK,CAAC,iCAAD,CAAZ;AACd,UAAMK,KAAK,GAAGjB,IAAI,CAACkB,KAAL,CAAWC,IAAI,IAAI;AACjC,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACC,KAFa,CAAd;;AAGA,QAAIH,KAAJ,EAAW;AACPhB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAS,EAAC,GAAGgB,OAAJ;AAAYK,QAAAA,QAAQ,EAAC;AAArB,OAAT,CAAD,CAAP;AACH,KAFD,MAEO;AACHT,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACH;AACJ,GAVD;;AAYA,SAAO;AACHhB,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHgB,IAAAA,OAAO,EAACA;AAHL,GAAP;AAKH;;GAvCQrB,O;;KAAAA,O;AAyCT,eAAeA,OAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport axios from 'axios'\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart,setCart]=useState([])\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n                    console.log(res)\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n            getUser()\r\n        }\r\n    }, [token])\r\n    \r\n    const addCart = async (product) => {\r\n        if(!isLogged) return alert(\"Please login to continue buying\")\r\n        const check = cart.every(item => {\r\n        return item._id !== product._id\r\n        })\r\n        if (check) {\r\n            setCart([...cart,{...product,quantity:1}])\r\n        } else {\r\n            alert(\"This product has been added to cart\")\r\n        }\r\n    }\r\n    \r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        addCart:addCart\r\n}\r\n}\r\n\r\nexport default UserAPI;"]},"metadata":{},"sourceType":"module"}